=render 'menu', current_session: @session

-if params[:action] == 'custom'
  =render 'source_selection', sources: @session.sources

-if !@items.empty? && @session && (!@session.completed_to || @items.first.created_at > @session.completed_to)
  =link_to(log_path(time: @items.first.created_at + 1), class: 'log-button') do
    span.tick &#10003;&nbsp;
    span.message Mark all as read

table.item-list
  -displayed_log = false
  -overflow = 20
  -@items.each_with_index do |item, index|
    -overflow -= 1 if displayed_log == true
    -break if overflow == 0
    -if @session && @session.completed_to && displayed_log == false && item.created_at <= @session.completed_to
      -displayed_log = true
      tr
        td.log colspan=(2)
          -if index == 0
            |&#10003; All up-to-date
          -else
            span &#10003;&nbsp;
            |Read to here -&nbsp;
            =distance_of_time_in_words(Time.new, @session.completed_to) + ' ago'
    tr class=('read' if displayed_log) style=("opacity: #{(overflow.to_f / 20)}")
      td
        =link_to(item.url, target: '_blank') do
          =cl_image_tag(item.source, html_height: '20', html_width: '20', class: 'icon')
      td
        =link_to item.title, item.url, class: 'title-link'
        -if item.format
          span.format-icon =item.format
        br
        span.muted
          =time_ago(item.created_at)
          span.domain =print_url(item.url)
          span.short-domain =print_url(item.url, 14)
          -if item.reading_time.between?(1,3)
            span.fast ="#{item.reading_time} min read"
          -elsif item.reading_time.between?(4,10)
            span.medium ="#{item.reading_time} min read"
          -elsif item.reading_time.between?(11,100)
            span.slow ="#{item.reading_time} min read"
          -if item.comment_url?
            span =link_to 'comments', item.comment_url
          -if @session.trello_token && !@session.saved_items.include?(item.id)
            span =link_to 'save', add_trello_story_path(id: item.id)
          -if item.tweet_count.to_i > 0
            span =cl_image_tag('twitter', height: '15', width: '15', class: 'twitter-icon')
            span =item.tweet_count
          -if item.topped
            span.topped title=('Reached the top spot!')
              |&#9733;
.graph
  =image_tag(CloudinaryImage.current_graph_url)
  p Post Volume Trend (30hr)
